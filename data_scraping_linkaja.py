# -*- coding: utf-8 -*-
"""Data_Scraping_LinkAja.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p4NFxSRfDIMV6xaIr8emxfN-zgz7Hxaj

**PENERAPAN ALGORITMA SUPPORT VECTOR
MACHINE  PADA ANALISIS SENTIMEN TERHADAP APLIKASI LINKAJA MELALUI REVIEW
GOOGLE PLAY STORE**

# SCRAPPING DATA
"""

!pip install google-play-scraper

"""# IMPORT LIBRARY

Digunakan untuk mengambil informasi aplikasi dan ulasan dari google play store
"""

from google_play_scraper import reviews, Sort
from datetime import datetime
import pytz

# ID aplikasi
app_id = 'com.telkom.mwallet'

# Fungsi untuk mengambil ulasan
def get_reviews(app_id, lang='id', count=2000, sort=Sort.NEWEST):
    try:
        result, _ = reviews(
            app_id,
            lang=lang,
            country='id',
            sort=sort,
            count=count
        )
        return result
    except Exception as e:
        print("Error:", e)
        return None

# Fungsi untuk memfilter ulasan berdasarkan rentang tanggal
def filter_reviews_by_date(reviews_list, start_date, end_date):
    filtered_reviews = []
    for review in reviews_list:
        review_date = review['at']
        if review_date.tzinfo is None:
            review_date = review_date.replace(tzinfo=pytz.UTC)

        # Memfilter berdasarkan rentang tanggal
        if start_date <= review_date <= end_date:
            filtered_reviews.append(review)
    return filtered_reviews

# Menentukan rentang tanggal
start_date = datetime(2024, 1, 1, tzinfo=pytz.UTC)
end_date = datetime(2024, 11, 30, 23, 59, 59, tzinfo=pytz.UTC)

# Mengambil ulasan
reviews_list = get_reviews(app_id)

# Memfilter ulasan berdasarkan rentang tanggal
if reviews_list is not None:
    filtered_reviews = filter_reviews_by_date(reviews_list, start_date, end_date)
    print(f"Jumlah ulasan dari Januari 2024 hingga November 2024: {len(filtered_reviews)}\n")
    for review in filtered_reviews:
        print(review)  # Menampilkan ulasan yang terfilter
else:
    print("Tidak ada data ulasan yang tersedia.")

import csv

def export_to_csv(reviews, file_name='Ulasan_LinkAja.csv'):
    if reviews:
        fieldnames = ['Review ID', 'Username', 'Rating', 'Review Text', 'Date']

        with open(file_name, mode='w', newline='', encoding='utf-8') as csv_file:
            writer = csv.DictWriter(csv_file, fieldnames=fieldnames)
            writer.writeheader()

            for review in reviews:
                writer.writerow({
                    'Review ID': review['reviewId'],
                    'Username': review['userName'],
                    'Rating': review['score'],
                    'Review Text': review['content'],
                    'Date': review['at']
                })

            print(f"Data berhasil disimpan dalam {file_name}")
    else:
        print("Tidak ada data untuk disimpan.")

# Pastikan menggunakan variabel yang benar
export_to_csv(reviews_list)

import pandas as pd
my_df = pd.read_csv('/content/Ulasan_LinkAja.csv')
my_df.info()

my_df.head()

my_df = pd.read_csv('Ulasan_LinkAja.csv')

my_df.columns = my_df.columns.str.strip()

my_df[['Username','Rating','Review Text','Date']]
sorted_df = my_df.sort_values(by='Date', ascending=True)
sorted_df.head()

my_df = sorted_df[['Username','Rating', 'Review Text', 'Date']] #kemudian kita simpan ke variabel my_df

my_df.head()

my_df.to_csv("Data_LinkAja.csv", index = False)

"""# PEMBERSIHAN DATA

**Data Cleaning**
"""

import pandas as pd
pd.set_option('display.max_columns', None)
my_df = pd.read_csv('Data_LinkAja.csv')
my_df.head()

# info() digunakan untuk menampilkan informasi detail tentang dataframe,
#seperti jumlah baris data, nama-nama kolom berserta jumlah data dan tipe datanya, dan sebagainya.
my_df.info()

#Tampilkan setiap baris yang memiliki nilai null (NaN) pada kolom apapun
#Gunakan fitur isna() yang disediakan library pandas
my_df.isna()

my_df.isna().any()

my_df.describe()

#mencari jumlah baris data yang bernilai null
#terdapat kolom label memiliki nilai kosong
my_df.isnull().sum()

"""**Handling Missing value-Ignore tuple**"""

my_df.isnull().sum()

my_df.head()

# Menghapus baris duplikat
my_df = my_df.drop_duplicates()

# Menampilkan DataFrame setelah duplikat dihapus
my_df.head()

my_df.info()

my_df[['Review Text', 'Username', 'Rating']].astype('str').to_csv("LinkAja_preprocessing.csv", index=False)